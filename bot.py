from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor
from aiogram.types import ReplyKeyboardRemove, \
    ReplyKeyboardMarkup, KeyboardButton, \
    InlineKeyboardMarkup, InlineKeyboardButton
import os
import pandas as pd
import numpy as np


TOKEN = '5398472247:AAFEpqmRrwHzdkNyDtamhtw8gP-9NywpSlU'


bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

#
df = pd.read_csv('FAQ_Database.csv', sep=',', header=None) #—á–∏—Ç–∞–µ–º –¥–∞—Ç–∞—Å–µ—Ç
data = df.values[1:] #—Å—Ä–µ–∑
data = np.array(data) #—Ç–∞–±–ª–∏—Ü–∞ –≤ –º–∞—Å—Å–∏–≤
data = np.delete(data, [0, 1, 2, 3, 4, 5, 7, 8, 9], axis=1) #—É–¥–∞–ª—è–µ–º –Ω–µ–Ω—É–∂–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
data = np.rot90(data, k=-1)
data[0] = np.array(list(map(lambda x: x.lower(),  data[0]))) #
data = np.rot90(data)

@dp.message_handler(commands=['start']) #—Ñ—É–Ω–∫—Ü–∏—è —Å—Ç–∞—Ä—Ç–∞ –∏ –æ–ø–∏—Å–∞–Ω–∏—è –±–æ—Ç–∞
async def process_start_command(message: types.Message):
    await message.reply("–ü—Ä–∏–≤–µ—Ç!ü§ñ\n–≠—Ç–æ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –ë–∞–Ω–∫–∞ ¬´–û—Ç–∫—Ä—ã—Ç–∏–µ¬ª üöÄ \n –ü–∏—à–∏ –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –≤—ã–±–∏—Ä–∞–π –∏–∑ —Å–ø–∏—Å–∫–∞, "
                        "–º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è —Ç–µ–±–µ –¥–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é "
                        "–ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!ü§© "
                        "\n –í–æ—Ç —Ç–µ–±–µ FAQ, –∫–æ—Ç–æ—Ä—ã–π —Ç–µ–±–µ –ø–æ–º–æ–∂–µ—Ç —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ø–æ—Å—Ç–∞–Ω–æ–≤–∫–æ–π"
                        " –≤–æ–ø—Ä–æ—Å–∞ –¥–ª—è –±–æ—Ç–∞:"
                        "\n https://docs.google.com/document/d/1CaDX8YLVpDlZWWkpmcbaNQHu8AwieoEMdfdiMdcSt0s/edit"
                        "\n ü•≥–ò –ø—Ä–∏–º–µ—Ä –≤–æ–ø—Ä–æ—Å–æ–≤ –∏–∑ FAQ ü•≥:"
                        "\n - –ö–∞–∫ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂ –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é –ø–æ—Å–ª–µ —Å–æ–≤–µ—Ä—à–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏"
                        "\n - –ö–∞–∫ —É–¥–∞–ª–∏—Ç—å –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂"
                        "\n - –ö–∞–∫ –Ω–∞–π—Ç–∏ –±–ª–∏–∂–∞–π—à–∏–π –æ—Ñ–∏—Å –±–∞–Ω–∫–∞"
                        "\n - –ö–∞–∫ —É–∑–Ω–∞—Ç—å –≥—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã –∫–∞—Å—Å—ã –∏ –¥–µ–ø–æ–∑–∏—Ç–∞—Ä–∏—è"
                        "\n - –ö–∞–∫ —É–∑–Ω–∞—Ç—å –≥—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã –∫–∞—Å—Å—ã –∏ –¥–µ–ø–æ–∑–∏—Ç–∞—Ä–∏—è"
                        "\n - –ö–∞–∫ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –≤ –æ—Ñ–∏—Å")


@dp.message_handler(content_types=types.ContentType.ANY) #–æ—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –±–æ—Ç–∞
async def echo(message: types.Message):
    messenge = (message.text).lower()
    if len(data[np.where(data[:,0] == messenge)]) != 0:
        for item in data[np.where(data[:,0] == messenge)][0]:
            if str(item) != 'nan' and str(item) != data[np.where(data[:,0] == messenge)][0][0]:
                await message.answer(item)

    else:
        # –í—Å—ë, —á—Ç–æ –Ω–µ –ø–æ–ø–∞–¥–∞–µ—Ç –ø–æ–¥ —Ç–µ–∫—Å—Ç
        await message.answer("–°—Ñ–æ—Ä–º—É–ª–∏—Ä—É–π —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å —á–µ—Ä–µ–∑ FAQ!ü§©"
                             "\n https://docs.google.com/document/d/1CaDX8YLVpDlZWWkpmcbaNQHu8AwieoEMdfdiMdcSt0s/edit ")


if __name__ == '__main__':
    executor.start_polling(dp)
